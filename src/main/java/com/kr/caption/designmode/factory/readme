所有的工厂模式都是用来封装对象的创建
工厂模式通过让子类决定该创建的对象是什么，来达到封装对象创建的过程

依赖倒置原则：变量不可以持有具体类的引用；不要让类派生自具体类，如果来自具体类，就会依赖具体类，请派生自一个抽象；
           不要覆盖基类中已实现的方法，基类中已经实现方法是由子类共享的。

抽象工厂：（提供一个接口用于创建相关或依赖对象的家族，不需要明确指定具体类）对象的组合； 创建了一个产品家族的抽象类型；
工厂方法：（定义了一个创建对象的接口，由子类去决定要实例化的是哪一个，把实例化推迟到子类）继承，需要扩展一个类，并覆盖他的工厂方法； 创建一个产品；实质就是通过子类来创建对象；负责将客户从具体类型中解耦；
两者：封装对象的创建；解耦；降低对特定实现的依赖；
